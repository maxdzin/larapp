version: '3'


services:
  # PHP service
  la-production-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: la-production-app
    image: larapp-production/app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: production
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/production.ini:/usr/local/etc/php/conf.d/local.ini
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    ports:
      - '9000'
    networks:
      - la-production-network


  # Web server service
  la-production-webserver:
    image: nginx:mainline-alpine
    container_name: la-production-webserver
    restart: unless-stopped
    tty: true
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf
      - ./docker/logs/nginx:/var/log/nginx
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    depends_on:
      - la-production-app
      - la-production-db
    networks:
      - la-production-network


  # Certbot service
  la-production-certbot:
    image: certbot/certbot
    container_name: la-production-certbot
    restart: unless-stopped
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - la-production-network


  # DB service
  la-production-db:
    image: mysql:latest
    container_name: la-production-db
    command: --default-authentication-plugin=mysql_native_password
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    tty: true
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
    volumes:
      - laproductiondb:/var/lib/mysql
      - ./docker/db/mysql/config/production.my.cnf:/etc/mysql/my.cnf
      - ./docker/db/mysql/config/conf.d/:/etc/mysql/conf.d/
      - ./database/snapshots/:/var/db/
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    networks:
      - la-production-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]


  # Redis service
  la-production-redis:
    image: 'redis:alpine'
    container_name: la-production-redis
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'laproductionredis:/data'
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    command: [ 'redis-server', '--requirepass', '$REDIS_PASSWORD' ]
    networks:
      - la-production-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]


  # Queue worker service
  la-production-queue-worker:
    image: larapp-production/app
    container_name: la-production-queue-worker
    restart: unless-stopped
    volumes:
      - ./:/var/www
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    command: 'php /var/www/artisan queue:work database --timeout=0 --verbose --sleep=3'
    depends_on:
      - la-production-app
    networks:
      - la-production-network


  # Webpack service
  la-production-node:
    image: node:lts
    container_name: la-production-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./node_modules:/var/www/node_modules
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    ports:
      - '3000:3000'
    networks:
      - la-production-network


networks:
  la-production-network:
    driver: bridge


volumes:
  laproductiondb:
    driver: local
  laproductionredis:
    driver: local
