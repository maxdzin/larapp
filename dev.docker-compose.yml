version: '3'

services:
  # PHP service
  la-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: la-app-dev
    image: la-app-dev
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    ports:
      - '9000:9000'
    networks:
      - la-network-dev


  # Web server service
  la-webserver-dev:
    image: nginx:mainline-alpine
    container_name: la-webserver-dev
    restart: unless-stopped
    tty: true
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/development.conf:/etc/nginx/conf.d/default.conf
      - ./docker/logs/nginx:/var/log/nginx
      - ./docker/certs:/etc/certificates
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    depends_on:
      - la-app-dev
      - la-db-dev
      - la-redis-dev
    networks:
      - la-network-dev


  # Certbot service
  la-certbot-dev:
    image: certbot/certbot
    container_name: la-certbot-dev
    restart: unless-stopped
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - la-network-dev

  # DB service
  la-db-dev:
    image: mysql:8.0
    container_name: la-db-dev
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    tty: true
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
      # MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - ladbdev:/var/lib/mysql
      - ./docker/db/mysql/config/my.cnf:/etc/mysql/my.cnf
      - ./docker/db/mysql/config/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
    networks:
      - la-network-dev


  # Redis service
  la-redis-dev:
    image: redis:alpine
    container_name: la-redis-dev
    restart: unless-stopped
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'laredis:/data'
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    command: ['redis-server', '--requirepass', '$REDIS_PASSWORD']
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
    networks:
      - la-network-dev


  # Mailhog service
  # la-mailhog-dev:
  #   image: 'mailhog/mailhog:latest'
  #   container_name: la-mailhog-dev
  #   ports:
  #     - '${FORWARD_MAILHOG_PORT:-1025}:1025'
  #     - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
  #   logging:
  #     driver: 'json-file'
  #     options:
  #       max-file: '5'
  #       max-size: '10m'
  #   networks:
  #     - la-network-dev


  # Queue worker service
  la-queue-worker-dev:
    image: la-app-dev
    container_name: la-queue-worker-dev
    restart: unless-stopped
    volumes:
      - ./:/var/www
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    command: 'php /var/www/artisan queue:work database --timeout=0 --verbose --sleep=3'
    depends_on:
      - la-app-dev
    networks:
      - la-network-dev


  # Webpack service
  la-node-dev:
    image: node:lts
    container_name: la-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./node_modules:/var/www/node_modules
      - ./docker/logs/node:/.npm/_logs
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    ports:
      - '3000:3000'
    networks:
      - la-network-dev

networks:
  la-network-dev:
    driver: bridge


volumes:
  ladbdev:
    driver: local
  laredis:
    driver: local
